# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'a96adbf8-46b7-4e23-bb11-3aa7c61abfda'
  imageRepository: 'spring-app'
  containerRegistry: 'lottechemicalacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  # tag: '$(Build.BuildId)'
  imagePullSecret: 'lottechemicalacr34208459-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  branch: 'spring'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: Maven@4
      displayName: Maven Build
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(MY_TAG)

- stage: Deploy
  displayName: Deploy stage

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'joonhyeok95phpnewapp'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - script: |
              tree
              echo '샘플:'$(pipeline.workspace)
              
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                manifests/deployment.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(MY_TAG)